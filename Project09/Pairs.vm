function Pairs.new 2
    push constant 8
    call Memory.alloc 1
    pop pointer 0
    push constant 8
    pop this 0
    push constant 54
    pop this 1
    call CardsData.getFlipAnimationTopBottomData 0
    pop this 4
    call CardsData.getFlipAnimationSidesData 0
    pop this 5
    call CardsData.getBackCard 0
    pop this 6
    push constant 32
    call Array.new 1
    pop this 7
    push constant 0
    push this 7
    add
    call CardsData.getGhostCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 1
    push this 7
    add
    call CardsData.getChestCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 2
    push this 7
    add
    call CardsData.getSkullCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 3
    push this 7
    add
    call CardsData.getSwordAndShieldCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 4
    push this 7
    add
    call CardsData.getPandaCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 5
    push this 7
    add
    call CardsData.getFlameCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 6
    push this 7
    add
    call CardsData.getBookCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 7
    push this 7
    add
    call CardsData.getStrawberryCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 8
    push this 7
    add
    call CardsData.getKnightCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 9
    push this 7
    add
    call CardsData.getPotionCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 10
    push this 7
    add
    call CardsData.getCoinsCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 11
    push this 7
    add
    call CardsData.getSmileyCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 12
    push this 7
    add
    call CardsData.getNightCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 13
    push this 7
    add
    call CardsData.getWizardCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 14
    push this 7
    add
    call CardsData.getBallCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 15
    push this 7
    add
    call CardsData.getFlowerCard 0
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 3
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 16
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 8
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 17
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 14
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 18
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 10
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 19
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 11
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 20
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 13
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 21
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 15
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 22
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 4
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 23
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 1
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 24
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 6
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 25
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 2
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 26
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 12
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 27
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 7
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 28
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 0
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 29
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 5
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 30
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 9
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push constant 31
    push this 7
    add
    push local 1
    call Card.getData 1
    call Card.new 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push pointer 0
    return
function Pairs.PrintAllCards 10
    push argument 0
    pop pointer 0
    push constant 16384
    pop local 0
label Pairs_0
    push local 2
    push constant 4
    lt
    not
    if-goto Pairs_1
    push local 1
    push this 0
    add
    pop local 1
    push local 1
    pop local 5
    push local 1
    push constant 1
    add
    pop local 6
    push local 5
    push this 1
    add
    push constant 2
    sub
    pop local 7
    push local 6
    push this 1
    add
    push constant 2
    sub
    pop local 8
    push constant 0
    pop local 3
label Pairs_2
    push local 3
    push constant 4
    push this 1
    call Math.multiply 2
    lt
    not
    if-goto Pairs_3
    push constant 0
    pop local 4
label Pairs_4
    push local 4
    push constant 8
    lt
    not
    if-goto Pairs_5
    push local 1
    push local 5
    eq
    push local 1
    push local 6
    eq
    or
    push local 1
    push local 7
    eq
    or
    push local 1
    push local 8
    eq
    or
    not
    if-goto Pairs_7
    push local 1
    push local 5
    eq
    not
    if-goto Pairs_9
    push local 2
    push constant 8
    call Math.multiply 2
    push local 4
    add
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 9
    push local 9
    push local 2
    call Card.setRow 2
    pop temp 0
    push local 9
    push local 4
    call Card.setColumn 2
    pop temp 0
    push local 9
    push local 0
    push local 1
    push constant 32
    call Math.multiply 2
    add
    push local 4
    push constant 4
    call Math.multiply 2
    add
    call Card.setAddress 2
    pop temp 0
    goto Pairs_8
label Pairs_9
label Pairs_8
    push local 0
    push local 1
    push constant 32
    call Math.multiply 2
    add
    push local 4
    push constant 4
    call Math.multiply 2
    add
    push constant 256
    neg
    call Memory.poke 2
    pop temp 0
    push local 0
    push local 1
    push constant 32
    call Math.multiply 2
    add
    push local 4
    push constant 4
    call Math.multiply 2
    add
    push constant 1
    add
    push constant 1
    neg
    call Memory.poke 2
    pop temp 0
    push local 0
    push local 1
    push constant 32
    call Math.multiply 2
    add
    push local 4
    push constant 4
    call Math.multiply 2
    add
    push constant 2
    add
    push constant 1
    neg
    call Memory.poke 2
    pop temp 0
    push local 0
    push local 1
    push constant 32
    call Math.multiply 2
    add
    push local 4
    push constant 4
    call Math.multiply 2
    add
    push constant 3
    add
    push constant 255
    call Memory.poke 2
    pop temp 0
    goto Pairs_6
label Pairs_7
    push local 0
    push local 1
    push constant 32
    call Math.multiply 2
    add
    push local 4
    push constant 4
    call Math.multiply 2
    add
    push local 3
    push this 6
    add
    pop pointer 1
    push that 0
    push constant 768
    or
    call Memory.poke 2
    pop temp 0
    push local 0
    push local 1
    push constant 32
    call Math.multiply 2
    add
    push local 4
    push constant 4
    call Math.multiply 2
    add
    push constant 1
    add
    push local 3
    push constant 1
    add
    push this 6
    add
    pop pointer 1
    push that 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push local 1
    push constant 32
    call Math.multiply 2
    add
    push local 4
    push constant 4
    call Math.multiply 2
    add
    push constant 2
    add
    push local 3
    push constant 2
    add
    push this 6
    add
    pop pointer 1
    push that 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push local 1
    push constant 32
    call Math.multiply 2
    add
    push local 4
    push constant 4
    call Math.multiply 2
    add
    push constant 3
    add
    push local 3
    push constant 3
    add
    push this 6
    add
    pop pointer 1
    push that 0
    push constant 192
    or
    call Memory.poke 2
    pop temp 0
label Pairs_6
    push local 4
    push constant 1
    add
    pop local 4
    goto Pairs_4
label Pairs_5
    push local 1
    push constant 1
    add
    pop local 1
    push local 3
    push constant 4
    add
    pop local 3
    goto Pairs_2
label Pairs_3
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_0
label Pairs_1
    push pointer 0
    push constant 0
    push this 7
    add
    pop pointer 1
    push that 0
    call Pairs.Select 2
    pop temp 0
    push constant 0
    return
function Pairs.Select 4
    push argument 0
    pop pointer 0
    push this 2
    push constant 0
    eq
    not
    not
    if-goto Pairs_11
    push pointer 0
    call Pairs.Deselect 1
    pop temp 0
    goto Pairs_10
label Pairs_11
label Pairs_10
    push argument 1
    call Card.getAddress 1
    pop local 0
    push argument 1
    pop this 2
label Pairs_12
    push local 2
    push constant 3
    lt
    not
    if-goto Pairs_13
    push local 0
    push constant 32
    push constant 2
    push local 2
    add
    call Math.multiply 2
    sub
    push constant 16
    neg
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 2
    push local 2
    add
    call Math.multiply 2
    sub
    push constant 1
    add
    push constant 1
    neg
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 2
    push local 2
    add
    call Math.multiply 2
    sub
    push constant 2
    add
    push constant 1
    neg
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 2
    push local 2
    add
    call Math.multiply 2
    sub
    push constant 3
    add
    push constant 4095
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 1
    push local 2
    add
    push this 1
    add
    call Math.multiply 2
    add
    push constant 16
    neg
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 1
    push local 2
    add
    push this 1
    add
    call Math.multiply 2
    add
    push constant 1
    add
    push constant 1
    neg
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 1
    push local 2
    add
    push this 1
    add
    call Math.multiply 2
    add
    push constant 2
    add
    push constant 1
    neg
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 1
    push local 2
    add
    push this 1
    add
    call Math.multiply 2
    add
    push constant 3
    add
    push constant 4095
    call Memory.poke 2
    pop temp 0
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_12
label Pairs_13
    push local 0
    push constant 32
    sub
    pop local 0
    push constant 0
    pop local 2
label Pairs_14
    push local 2
    push this 1
    push constant 2
    add
    lt
    not
    if-goto Pairs_15
    push local 0
    call Memory.peek 1
    pop local 1
    push local 0
    push local 1
    push constant 112
    or
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 3
    add
    call Memory.peek 1
    pop local 1
    push local 0
    push constant 3
    add
    push local 1
    push constant 3584
    or
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    add
    pop local 0
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_14
label Pairs_15
    push constant 0
    return
function Pairs.Deselect 4
    push argument 0
    pop pointer 0
    push this 2
    call Card.getAddress 1
    pop local 0
label Pairs_16
    push local 2
    push constant 3
    lt
    not
    if-goto Pairs_17
    push local 0
    push constant 32
    push constant 2
    push local 2
    add
    call Math.multiply 2
    sub
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 2
    push local 2
    add
    call Math.multiply 2
    sub
    push constant 1
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 2
    push local 2
    add
    call Math.multiply 2
    sub
    push constant 2
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 2
    push local 2
    add
    call Math.multiply 2
    sub
    push constant 3
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 1
    push local 2
    add
    push this 1
    add
    call Math.multiply 2
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 1
    push local 2
    add
    push this 1
    add
    call Math.multiply 2
    add
    push constant 1
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 1
    push local 2
    add
    push this 1
    add
    call Math.multiply 2
    add
    push constant 2
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    push constant 1
    push local 2
    add
    push this 1
    add
    call Math.multiply 2
    add
    push constant 3
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_16
label Pairs_17
    push local 0
    push constant 32
    sub
    pop local 0
    push constant 0
    pop local 2
label Pairs_18
    push local 2
    push this 1
    push constant 2
    add
    lt
    not
    if-goto Pairs_19
    push local 0
    call Memory.peek 1
    pop local 1
    push local 0
    push local 1
    push constant 113
    neg
    and
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 3
    add
    call Memory.peek 1
    pop local 1
    push local 0
    push constant 3
    add
    push local 1
    push constant 3585
    neg
    and
    call Memory.poke 2
    pop temp 0
    push local 0
    push constant 32
    add
    pop local 0
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_18
label Pairs_19
    push constant 0
    return
function Pairs.Action 5
    push argument 0
    pop pointer 0
    push this 2
    push constant 0
    eq
    not
    if-goto Pairs_21
    push constant 0
    return
    goto Pairs_20
label Pairs_21
label Pairs_20
    push constant 1
    call Array.new 1
    pop local 0
    push constant 0
    push local 0
    add
    push this 2
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 1
    pop local 2
    push this 3
    push constant 0
    eq
    not
    if-goto Pairs_23
    push this 2
    pop this 3
    goto Pairs_22
label Pairs_23
    push this 3
    push this 2
    eq
    not
    if-goto Pairs_25
    push constant 0
    pop this 3
    goto Pairs_24
label Pairs_25
    push constant 1
    neg
    pop local 4
label Pairs_24
label Pairs_22
    push pointer 0
    push local 0
    push local 2
    call Pairs.Flip 3
    pop temp 0
    push this 2
    push this 2
    call Card.getIsFlipped 1
    not
    call Card.setIsFlipped 2
    pop temp 0
    push local 4
    not
    if-goto Pairs_27
    push constant 2
    call Array.new 1
    pop local 1
    push constant 0
    push local 1
    add
    push this 2
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 1
    push local 1
    add
    push this 3
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 2
    pop local 3
    push this 2
    call Card.getData 1
    push this 3
    call Card.getData 1
    eq
    not
    if-goto Pairs_29
    push this 2
    push constant 1
    neg
    call Card.setIsClosed 2
    pop temp 0
    push this 3
    push constant 1
    neg
    call Card.setIsClosed 2
    pop temp 0
    push pointer 0
    call Pairs.MoveRight 1
    pop temp 0
    push pointer 0
    push local 1
    push local 3
    call Pairs.Close 3
    pop temp 0
    push this 2
    push constant 0
    eq
    not
    if-goto Pairs_31
    push pointer 0
    call Pairs.GameOver 1
    pop temp 0
    goto Pairs_30
label Pairs_31
label Pairs_30
    goto Pairs_28
label Pairs_29
    push pointer 0
    push local 1
    push local 3
    call Pairs.Flip 3
    pop temp 0
    push this 2
    push constant 0
    call Card.setIsFlipped 2
    pop temp 0
    push this 3
    push constant 0
    call Card.setIsFlipped 2
    pop temp 0
label Pairs_28
    push constant 0
    pop this 3
    goto Pairs_26
label Pairs_27
label Pairs_26
    push constant 0
    return
function Pairs.Flip 13
    push argument 0
    pop pointer 0
    push constant 3
    pop local 4
    push argument 2
    call Array.new 1
    pop local 11
    push argument 2
    call Array.new 1
    pop local 12
label Pairs_32
    push local 0
    push argument 2
    lt
    not
    if-goto Pairs_33
    push local 0
    push argument 1
    add
    pop pointer 1
    push that 0
    pop local 10
    push local 10
    push this 2
    eq
    not
    if-goto Pairs_35
    push local 0
    push local 11
    add
    push constant 112
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push local 0
    push local 12
    add
    push constant 3584
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    goto Pairs_34
label Pairs_35
label Pairs_34
    push local 0
    push constant 1
    add
    pop local 0
    goto Pairs_32
label Pairs_33
    push constant 1
    pop local 0
label Pairs_36
    push local 0
    push constant 0
    push this 4
    add
    pop pointer 1
    push that 0
    lt
    not
    if-goto Pairs_37
    push constant 0
    pop local 2
label Pairs_38
    push local 2
    push argument 2
    lt
    not
    if-goto Pairs_39
    push local 2
    push argument 1
    add
    pop pointer 1
    push that 0
    pop local 10
    push local 10
    call Card.getAddress 1
    pop local 8
    push local 8
    push local 3
    add
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 11
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push local 4
    add
    push local 0
    push constant 1
    add
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 12
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    add
    push local 3
    add
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 11
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    add
    push local 4
    add
    push local 0
    push constant 1
    add
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 12
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push constant 2
    pop local 1
label Pairs_40
    push local 1
    push this 1
    push constant 2
    sub
    lt
    not
    if-goto Pairs_41
    push local 8
    push constant 32
    push local 1
    call Math.multiply 2
    add
    push local 3
    add
    pop local 5
    push local 5
    call Memory.peek 1
    pop local 7
    push local 5
    push local 7
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 11
    add
    pop pointer 1
    push that 0
    or
    and
    push local 0
    push this 5
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    push local 1
    call Math.multiply 2
    add
    push local 4
    add
    pop local 5
    push local 5
    call Memory.peek 1
    pop local 7
    push local 5
    push local 7
    push local 0
    push constant 1
    add
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 12
    add
    pop pointer 1
    push that 0
    or
    and
    push local 0
    push constant 1
    add
    push this 5
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 1
    push constant 1
    add
    pop local 1
    goto Pairs_40
label Pairs_41
    push local 8
    push constant 32
    push this 1
    push constant 2
    sub
    call Math.multiply 2
    add
    push local 3
    add
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 11
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    push this 1
    push constant 2
    sub
    call Math.multiply 2
    add
    push local 4
    add
    push local 0
    push constant 1
    add
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 12
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    push this 1
    push constant 1
    sub
    call Math.multiply 2
    add
    push local 3
    add
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 11
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    push this 1
    push constant 1
    sub
    call Math.multiply 2
    add
    push local 4
    add
    push local 0
    push constant 1
    add
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 12
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_38
label Pairs_39
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push constant 0
    eq
    not
    if-goto Pairs_43
    push local 3
    push constant 1
    add
    pop local 3
    push local 4
    push constant 1
    sub
    pop local 4
    push constant 0
    pop local 2
label Pairs_44
    push local 2
    push argument 2
    lt
    not
    if-goto Pairs_45
    push local 2
    push local 11
    add
    push constant 0
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push local 2
    push local 12
    add
    push constant 0
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_44
label Pairs_45
    goto Pairs_42
label Pairs_43
    push constant 2
    call Sys.wait 1
    pop temp 0
label Pairs_42
    push local 0
    push constant 2
    add
    pop local 0
    goto Pairs_36
label Pairs_37
    push constant 1
    pop local 3
    push constant 2
    pop local 4
    push constant 0
    push this 4
    add
    pop pointer 1
    push that 0
    push constant 3
    sub
    pop local 0
label Pairs_46
    push local 0
    push constant 0
    gt
    not
    if-goto Pairs_47
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push constant 0
    eq
    not
    if-goto Pairs_49
    push local 0
    push this 4
    add
    push constant 1
    neg
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push local 0
    push constant 1
    add
    push this 4
    add
    push constant 1
    neg
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    goto Pairs_48
label Pairs_49
label Pairs_48
    push constant 0
    pop local 2
label Pairs_50
    push local 2
    push argument 2
    lt
    not
    if-goto Pairs_51
    push local 2
    push argument 1
    add
    pop pointer 1
    push that 0
    pop local 10
    push local 10
    call Card.getAddress 1
    pop local 8
    push local 10
    call Card.getIsFlipped 1
    not
    if-goto Pairs_53
    push this 6
    pop local 9
    goto Pairs_52
label Pairs_53
    push local 10
    call Card.getData 1
    pop local 9
label Pairs_52
    push local 8
    push local 3
    add
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 11
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push local 4
    add
    push local 0
    push constant 1
    add
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 12
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    add
    push local 3
    add
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 11
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    add
    push local 4
    add
    push local 0
    push constant 1
    add
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 12
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push constant 2
    pop local 1
label Pairs_54
    push local 1
    push this 1
    push constant 2
    sub
    lt
    not
    if-goto Pairs_55
    push local 8
    push constant 32
    push local 1
    call Math.multiply 2
    add
    push local 3
    add
    push local 1
    push constant 4
    call Math.multiply 2
    push local 3
    add
    push local 9
    add
    pop pointer 1
    push that 0
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    and
    push local 2
    push local 11
    add
    pop pointer 1
    push that 0
    or
    push local 0
    push this 5
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    push local 1
    call Math.multiply 2
    add
    push local 4
    add
    push local 1
    push constant 4
    call Math.multiply 2
    push local 4
    add
    push local 9
    add
    pop pointer 1
    push that 0
    push local 0
    push constant 1
    add
    push this 4
    add
    pop pointer 1
    push that 0
    and
    push local 2
    push local 12
    add
    pop pointer 1
    push that 0
    or
    push local 0
    push constant 1
    add
    push this 5
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 1
    push constant 1
    add
    pop local 1
    goto Pairs_54
label Pairs_55
    push local 8
    push constant 32
    push this 1
    push constant 2
    sub
    call Math.multiply 2
    add
    push local 3
    add
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 11
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    push this 1
    push constant 2
    sub
    call Math.multiply 2
    add
    push local 4
    add
    push local 0
    push constant 1
    add
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 12
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    push this 1
    push constant 1
    sub
    call Math.multiply 2
    add
    push local 3
    add
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 11
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 8
    push constant 32
    push this 1
    push constant 1
    sub
    call Math.multiply 2
    add
    push local 4
    add
    push local 0
    push constant 1
    add
    push this 4
    add
    pop pointer 1
    push that 0
    push local 2
    push local 12
    add
    pop pointer 1
    push that 0
    or
    call Memory.poke 2
    pop temp 0
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_50
label Pairs_51
    push local 0
    push this 4
    add
    pop pointer 1
    push that 0
    push constant 1
    neg
    eq
    not
    if-goto Pairs_57
    push local 3
    push constant 1
    sub
    pop local 3
    push local 4
    push constant 1
    add
    pop local 4
    push constant 0
    pop local 2
label Pairs_58
    push local 2
    push argument 2
    lt
    not
    if-goto Pairs_59
    push local 2
    push argument 1
    add
    pop pointer 1
    push that 0
    pop local 10
    push local 10
    push this 2
    eq
    not
    if-goto Pairs_61
    push local 2
    push local 11
    add
    push constant 112
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push local 2
    push local 12
    add
    push constant 3584
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    goto Pairs_60
label Pairs_61
label Pairs_60
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_58
label Pairs_59
    push local 0
    push this 4
    add
    push constant 0
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push local 0
    push constant 1
    add
    push this 4
    add
    push constant 0
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    goto Pairs_56
label Pairs_57
    push constant 2
    call Sys.wait 1
    pop temp 0
label Pairs_56
    push local 0
    push constant 2
    sub
    pop local 0
    goto Pairs_46
label Pairs_47
    push constant 0
    return
function Pairs.Close 5
    push argument 0
    pop pointer 0
    push constant 0
    pop local 0
label Pairs_62
    push local 0
    push this 1
    lt
    not
    if-goto Pairs_63
    push constant 0
    pop local 1
label Pairs_64
    push local 1
    push argument 2
    lt
    not
    if-goto Pairs_65
    push local 1
    push argument 1
    add
    pop pointer 1
    push that 0
    pop local 4
    push local 4
    call Card.getAddress 1
    pop local 3
    push constant 0
    pop local 2
label Pairs_66
    push local 2
    push constant 4
    lt
    not
    if-goto Pairs_67
    push local 3
    push local 0
    push constant 32
    call Math.multiply 2
    add
    push local 2
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 3
    push local 0
    push constant 1
    add
    push constant 32
    call Math.multiply 2
    add
    push local 2
    add
    push constant 0
    call Memory.poke 2
    pop temp 0
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_66
label Pairs_67
    push local 1
    push constant 1
    add
    pop local 1
    goto Pairs_64
label Pairs_65
    push constant 2
    call Sys.wait 1
    pop temp 0
    push local 0
    push constant 2
    add
    pop local 0
    goto Pairs_62
label Pairs_63
    push constant 0
    return
function Pairs.GameOver 0
    push argument 0
    pop pointer 0
    push constant 10
    push constant 27
    call Output.moveCursor 2
    pop temp 0
    push constant 10
    call String.new 1
    push constant 87
    call String.appendChar 2
    push constant 101
    call String.appendChar 2
    push constant 108
    call String.appendChar 2
    push constant 108
    call String.appendChar 2
    push constant 32
    call String.appendChar 2
    push constant 68
    call String.appendChar 2
    push constant 111
    call String.appendChar 2
    push constant 110
    call String.appendChar 2
    push constant 101
    call String.appendChar 2
    push constant 33
    call String.appendChar 2
    call Output.printString 1
    pop temp 0
    push constant 12
    push constant 21
    call Output.moveCursor 2
    pop temp 0
    push constant 22
    call String.new 1
    push constant 80
    call String.appendChar 2
    push constant 114
    call String.appendChar 2
    push constant 101
    call String.appendChar 2
    push constant 115
    call String.appendChar 2
    push constant 115
    call String.appendChar 2
    push constant 32
    call String.appendChar 2
    push constant 40
    call String.appendChar 2
    push constant 114
    call String.appendChar 2
    push constant 41
    call String.appendChar 2
    push constant 32
    call String.appendChar 2
    push constant 116
    call String.appendChar 2
    push constant 111
    call String.appendChar 2
    push constant 32
    call String.appendChar 2
    push constant 114
    call String.appendChar 2
    push constant 101
    call String.appendChar 2
    push constant 116
    call String.appendChar 2
    push constant 114
    call String.appendChar 2
    push constant 121
    call String.appendChar 2
    push constant 46
    call String.appendChar 2
    push constant 46
    call String.appendChar 2
    push constant 46
    call String.appendChar 2
    push constant 46
    call String.appendChar 2
    call Output.printString 1
    pop temp 0
    push constant 0
    return
function Pairs.MoveUp 0
    push argument 0
    pop pointer 0
    push pointer 0
    push constant 1
    neg
    push constant 1
    neg
    call Pairs.Move 3
    pop temp 0
    push constant 0
    return
function Pairs.MoveDown 0
    push argument 0
    pop pointer 0
    push pointer 0
    push constant 1
    neg
    push constant 0
    call Pairs.Move 3
    pop temp 0
    push constant 0
    return
function Pairs.MoveLeft 0
    push argument 0
    pop pointer 0
    push pointer 0
    push constant 0
    push constant 1
    neg
    call Pairs.Move 3
    pop temp 0
    push constant 0
    return
function Pairs.MoveRight 0
    push argument 0
    pop pointer 0
    push pointer 0
    push constant 0
    push constant 0
    call Pairs.Move 3
    pop temp 0
    push constant 0
    return
function Pairs.Move 7
    push argument 0
    pop pointer 0
    push this 2
    push constant 0
    eq
    not
    if-goto Pairs_69
    push constant 0
    return
    goto Pairs_68
label Pairs_69
label Pairs_68
    push this 2
    call Card.getRow 1
    pop local 0
    push this 2
    call Card.getColumn 1
    pop local 1
    push argument 2
    not
    if-goto Pairs_71
    push constant 1
    neg
    pop local 4
    goto Pairs_70
label Pairs_71
    push constant 1
    pop local 4
label Pairs_70
    push constant 0
    pop local 2
label Pairs_72
    push local 2
    push constant 7
    lt
    push local 6
    push constant 0
    eq
    and
    not
    if-goto Pairs_73
    push argument 1
    not
    if-goto Pairs_75
    push local 0
    push local 4
    add
    pop local 0
    push local 0
    push constant 3
    gt
    not
    if-goto Pairs_77
    push constant 0
    pop local 0
    goto Pairs_76
label Pairs_77
    push local 0
    push constant 0
    lt
    not
    if-goto Pairs_79
    push constant 3
    pop local 0
    goto Pairs_78
label Pairs_79
label Pairs_78
label Pairs_76
    goto Pairs_74
label Pairs_75
    push local 1
    push local 4
    add
    pop local 1
    push local 1
    push constant 7
    gt
    not
    if-goto Pairs_81
    push constant 0
    pop local 1
    goto Pairs_80
label Pairs_81
    push local 1
    push constant 0
    lt
    not
    if-goto Pairs_83
    push constant 7
    pop local 1
    goto Pairs_82
label Pairs_83
label Pairs_82
label Pairs_80
label Pairs_74
    push local 0
    push constant 8
    call Math.multiply 2
    push local 1
    add
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 5
    push local 5
    call Card.getIsClosed 1
    not
    push this 2
    push local 5
    eq
    not
    and
    not
    if-goto Pairs_85
    push local 5
    pop local 6
    goto Pairs_84
label Pairs_85
label Pairs_84
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_72
label Pairs_73
    push local 6
    push constant 0
    eq
    not
    not
    if-goto Pairs_87
    push pointer 0
    push local 6
    call Pairs.Select 2
    pop temp 0
    push constant 0
    return
    goto Pairs_86
label Pairs_87
label Pairs_86
    push this 2
    call Card.getRow 1
    push constant 8
    call Math.multiply 2
    push this 2
    call Card.getColumn 1
    add
    pop local 3
    push constant 0
    pop local 2
label Pairs_88
    push local 2
    push constant 31
    lt
    push local 6
    push constant 0
    eq
    and
    not
    if-goto Pairs_89
    push local 3
    push local 4
    add
    pop local 3
    push local 3
    push constant 31
    gt
    not
    if-goto Pairs_91
    push constant 0
    pop local 3
    goto Pairs_90
label Pairs_91
    push local 3
    push constant 0
    lt
    not
    if-goto Pairs_93
    push constant 31
    pop local 3
    goto Pairs_92
label Pairs_93
label Pairs_92
label Pairs_90
    push local 3
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 5
    push local 5
    call Card.getIsClosed 1
    not
    push this 2
    push local 5
    eq
    not
    and
    not
    if-goto Pairs_95
    push local 5
    pop local 6
    goto Pairs_94
label Pairs_95
label Pairs_94
    push local 2
    push constant 1
    add
    pop local 2
    goto Pairs_88
label Pairs_89
    push local 6
    push constant 0
    eq
    not
    not
    if-goto Pairs_97
    push pointer 0
    push local 6
    call Pairs.Select 2
    pop temp 0
    push constant 0
    return
    goto Pairs_96
label Pairs_97
label Pairs_96
    push pointer 0
    call Pairs.Deselect 1
    pop temp 0
    push constant 0
    pop this 2
    push constant 0
    return
function Pairs.dispose 2
    push argument 0
    pop pointer 0
    push this 4
    call Array.dispose 1
    pop temp 0
    push this 5
    call Array.dispose 1
    pop temp 0
    push this 6
    call Array.dispose 1
    pop temp 0
label Pairs_98
    push local 0
    push constant 32
    lt
    not
    if-goto Pairs_99
    push local 0
    push this 7
    add
    pop pointer 1
    push that 0
    pop local 1
    push local 1
    call Card.dispose 1
    pop temp 0
    push local 0
    push constant 1
    add
    pop local 0
    goto Pairs_98
label Pairs_99
    push pointer 0
    call Memory.deAlloc 1
    pop temp 0
    push constant 0
    return